import numpy as np
import matplotlib.pyplot as plt
from collections import Counter

# Definir el número de simulaciones
num_simulations = 15  

# Cantidad de simulaciones
# Lista para almacenar los resultados de cada simulación
results = [4594, 4947, 8554, 7172, 5035, 4295, 7845, 874, 1597, 9521, 8233, 3133, 2413, 6506, 5309]

# Simulación de Monte Carlo: Generar 15 números aleatorios
for _ in range(num_simulations):
    number = np.random.choice(range(1, 9999), size=1, replace=False)  # Se elige 1 número sin repetición
    results.extend(number)  # Guardamos el número generado

# Contar la frecuencia de cada número
number_counts = Counter(results)

# Ordenar los números por frecuencia
sorted_counts = dict(sorted(number_counts.items()))

# Visualizar los resultados
plt.bar(sorted_counts.keys(), sorted_counts.values())
plt.xlabel('Número')
plt.ylabel('Frecuencia')
plt.title('Frecuencia de los Números de la Lotería tras 15 Simulaciones')
plt.xticks(rotation=90)  # Rotar las etiquetas del eje x para mejor legibilidad
plt.show()

//

import numpy as np
from collections import Counter

# Datos proporcionados por el usuario
results_user = [4594,4947,8554, 7172, 5035, 4295, 7845, 874, 1597, 9521, 8233, 3133, 2413, 6506, 5309]

# 1. Frecuencia de los números
frequency = Counter(results_user)

# 2. Promedio (media)
mean_value = np.mean(results_user)

# 3. Mediana
median_value = np.median(results_user)

# 4. Moda
mode_value = Counter(results_user).most_common(1)[0][0]

# 5. Varianza y desviación estándar
variance_value = np.var(results_user)
std_deviation_value = np.std(results_user)

# Mostrar resultados
print("Frecuencia de los números:", frequency)
print("Promedio (media):", mean_value)
print("Mediana:", median_value)
print("Moda:", mode_value)
print("Varianza:", variance_value)
print("Desviación estándar:", std_deviation_value)

Frecuencia de los números: Counter({4594: 1, 4947: 1, 8554: 1, 7172: 1, 5035: 1, 4295: 1, 7845: 1, 874: 1, 1597: 1, 9521: 1, 8233: 1, 3133: 1, 2413: 1, 6506: 1, 5309: 1})
Promedio (media): 5335.2
Mediana: 5035.0
Moda: 4594
Varianza: 6430721.626666667
Desviación estándar: 2535.886753517725

//
import numpy as np
import matplotlib.pyplot as plt
from collections import Counter

# Definir el número de simulaciones
num_simulations = 15  

# Cantidad de simulaciones
# Lista para almacenar los resultados de cada simulación
results = [4594, 4947, 8554, 7172, 5035, 4295, 7845, 874, 1597, 9521, 8233, 3133, 2413, 6506, 5309]

# Simulación de Monte Carlo: Generar 15 números aleatorios
for _ in range(num_simulations):
    number = np.random.choice(range(1, 9999), size=1, replace=False)  # Se elige 1 número sin repetición
    results.extend(number)  # Guardamos el número generado

# Contar la frecuencia de cada número
number_counts = Counter(results)

# Ordenar los números por frecuencia
sorted_counts = dict(sorted(number_counts.items()))

# Visualizar los resultados
plt.bar(sorted_counts.keys(), sorted_counts.values())
plt.xlabel('Número')
plt.ylabel('Frecuencia')
plt.title('Frecuencia de los Números de la Lotería tras 15 Simulaciones')
plt.xticks(rotation=90)  # Rotar las etiquetas del eje x para mejor legibilidad
plt.show()

//
